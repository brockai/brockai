name: Deploy OpenSearch

on:
  push:
    branches:
      - core

jobs:

  Install-Docker: 
    runs-on: ubuntu-latest
    steps:
      - name: Installl docker & doocker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_IP}}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          script: |
            sudo apt update
            sudo apt install apt-transport-https ca-certificates curl software-properties-common
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt update
            sudo apt install docker-ce
            sudo docker --version

            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version

  Clone-Python: 
    runs-on: ubuntu-latest
    needs: Install-Docker
    steps:
      - name: Clone brockai repo
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_IP}}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          script: |
            rm -rf ./brockai
            git clone https://github.com/brockai/brockai.git

      - name: Install python
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt update
            sudo apt install python3
            sudo apt-get -y install python3.11-venv

  Remove-OpenSearch:
    runs-on: ubuntu-latest
    needs: Clone-Python
    steps:
      - name: Remove Existing OpenSearch Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker system prune --all --force --volumes
            docker stop opensearch-node1 || true
            docker stop opensearch-node2 || true
            docker stop opensearch-dashboards || true
            docker compose down || true

  Start-OpenSearch-Node1:
    runs-on: ubuntu-latest
    needs: Remove-OpenSearch
    steps:
      - name: Build opensearch-node1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
            docker compose up -d opensearch-node1 || true            
          
  Start-OpenSearch-Node2:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Node1
    steps:
      - name: Build opensearch-node2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
            docker compose up -d opensearch-node2 || true                             

  Start-OpenSearch-Dashboards:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Node2
    steps:
      - name: Build opensearch-dashboards
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
            docker compose up -d opensearch-dashboards || true   
                    
  Nginx-Reverse-Proxy:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Dashboards
    steps:
      - name: Install nginx & reverse-proxy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt-get -y purge nginx nginx-common
            sudo apt update
            sudo apt-get -y install nginx
            sudo cp -f /root/brockai/default.conf /etc/nginx/sites-available/default
            sudo cp -f /root/brockai/reverse-proxy.conf /etc/nginx/sites-available/reverse-proxy.conf
            sudo cp -f /root/brockai/reverse-proxy-uat.conf /etc/nginx/sites-available/reverse-proxy-uat.conf
            sudo ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/
            sudo ln -s /etc/nginx/sites-available/reverse-proxy-uat.conf /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl enable nginx 

  Install-Firewall:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Dashboards
    steps:
      - name: Install firewall
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt purge ufw
            sudo apt update
            sudo apt install ufw
            sudo ufw allow OpenSSH
            sudo ufw allow 'Nginx Full'
            sudo ufw enable

  Start-Nginx-Streamlit:
    runs-on: ubuntu-latest
    needs: Install-Firewall
    steps:
      - name: Restart Streamlit
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl restart nginx
            sudo systemctl start streamlit.service
            sudo systemctl start streamlit-uat.service




