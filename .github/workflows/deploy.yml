name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:

  Nginx-Clone-Python: 

    runs-on: ubuntu-latest

    steps:
      - name: Install nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl stop nginx
            sudo apt purge nginx nginx-common
            sudo apt update
            sudo apt-get -y install nginx
            # sudo systemctl start nginx
            # sudo systemctl enable nginx

      - name: Clone brockai repo
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_IP}}
          username: root
          key: ${{secrets.SSH_PRIVATE_KEY}}
          script: |
            rm -rf ./brockai
            git clone https://github.com/brockai/brockai.git

      - name: Install python environment
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.DROPLET_IP }}
           username: ${{ secrets.DROPLET_USERNAME }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           script: |
             sudo apt update
             sudo apt install python3
             rm /var/www/streamlit/. -r || true
             mkdir /var/www/streamlit || true
             cp .env /var/www/streamlit
             cp ./brockai/frontend/. -r /var/www/streamlit
            #  cd /var/www/streamlit
            #  sudo apt-get -y install python3.11-venv
            #  sudo python3 -m venv brockai
            #  source brockai/bin/activate
            #  pip install -r requirements.txt

  Remove-OpenSearch:
    runs-on: ubuntu-latest
    needs: Nginx-Clone-Python
    steps:
      - name: Remove Existing OpenSearch Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
            docker system prune --all --force --volumes
            docker stop opensearch-node1 || true
            docker stop opensearch-node2 || true
            docker stop opensearch-dashboards || true
            docker compose down || true

  Start-OpenSearch-Node1:
    runs-on: ubuntu-latest
    needs: Remove-OpenSearch
    steps:
      - name: Build opensearch-node1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
            docker compose up -d opensearch-node1 || true            
          
  Start-OpenSearch-Node2:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Node1
    steps:
      - name: Build opensearch-node2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
            docker compose up -d opensearch-node2 || true                             

  Start-OpenSearch-Dashboards:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Node2
    steps:
      - name: Build opensearch-dashboards
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/brockai
              docker compose up -d opensearch-dashboards || true     

  Start-Streamlit:
    runs-on: ubuntu-latest
    needs: Start-OpenSearch-Dashboards
    steps:
      - name: Run Streamlit app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            source brockai/bin/activate
            sudo pip install -r /var/www/streamlit/requirements.txt
            streamlit run /var/www/streamlit/app.py
